worker_processes 2;

events {
    use epoll;
    multi_accept on;
    worker_connections  40000;
}

http {
    lua_package_path "/usr/local/openresty/nginx/conf/?.lua;;";
    resolver 127.0.0.11;

    upstream go-api {
        server go-api:8080 fail_timeout=1;
    }

    proxy_cache_path /var/cache/nginx_cache levels=1 keys_zone=my_cache:15m max_size=1G inactive=120m;
    proxy_cache_lock on;

    server {
        listen 80;
        server_name 127.0.0.1;
        access_log off;
        error_log on;

#         root /usr/share/nginx/html;

        location / {
             proxy_pass http://go-api;
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/v1/bet_insights/partner-widgets_settings {
                  if ($uri !~ /$) {
                          rewrite ^(.*)$ $1/ permanent;
                      }
                  proxy_pass http://go-api;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;

                  # Caching settings
                  proxy_cache my_cache;
                  proxy_cache_key "$http_partner_id$http_authorization$uri";
                  proxy_cache_valid 200 5m;

        }
        location /api/v1/bet_insights/partner-sports {
                    if ($uri !~ /$) {
                              rewrite ^(.*)$ $1/ permanent;
                       }
                  proxy_pass http://go-api;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;

                  # Caching settings
                  proxy_cache my_cache;
                  proxy_cache_key "$http_partner_id$http_authorization$uri";
                  proxy_cache_valid 200 5m;
                }


        location /invalidate {
           content_by_lua_file /usr/share/nginx/html/invalidator.lua;
        }

    }
}